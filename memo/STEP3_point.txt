3-1
    POSTとGETのリクエストの違いについて調べてみましょう
    →下のまとめのところにまとめて書いた。


3-4
    Hash化とはなにか？
        ハッシュ関数を利用して元のデータから不規則な文字列（ハッシュ値）を作成すること。
        元のデータが一部でも改竄されていた場合、同じハッシュ値にはならない。
        ハッシュ値から元のデータを復元したり、推測したりすることはできない（一方向性）。

    sha256以外にどんなハッシュ関数があるか調べてみましょう
        ・SHA-512
        512ビットの文字列が得られる。

        ・MD5
        128ビットの文字列が得られる。
        衝突困難性（違うデータから同じハッシュ値が現れないこと）が破れてしまったため使われなくなった。

    cf. 
    ・『かやのき先生』pp.366
    ・【MD5って何？】なんでもう使われていないのかまとめてみた！
    　https://qiita.com/SDTakeuchi/items/821a32501312d5d0b13e


3-6
    Log levelとは？
        ログレベルは、イベントの重大さを表すもの。
        また、どこまで重大なログレベルのイベントをログに記録するかという設定。
        echoのログレベルは、DEBUG/INFO/WARN/ERROR/OFFの5段階。
        デフォルトはERRORになっている。

        3-6では、「Debugf」を「Infof」以上にするか、
        	e.Logger.SetLevel(log.INFO)
        のINFOをDEBUGにすれば"message":"Image not found: images/no_image.jpg"が出る。

    webサーバーでは、本番はどのログレベルまで表示する？
        よくわからず……デフォルトだからERRORかな？ 流石にDEBUGではないと思う。

    cf.
    ・Customization
    　https://echo.labstack.com/docs/customization


まとめ
    以下のキーワードについて理解しましょう

    ・port (ポート番号)
        ポート番号は、IPアドレスで特定したコンピュータ上のアプリケーションを識別するための番号。

    ・localhost, 127.0.0.1
        ・127.0.0.1
        自分自身を指す特殊なIPアドレス（ローカルループバックアドレス）。
        ネットワークを介さずに、自分自身と通信する。

        ・localhost
        127.0.0.1に対応したホスト名。

        cf.
        ・『かやのき先生』pp.322-

        ・127.0.0.1とlocalhostと0.0.0.0の違い
        　https://qiita.com/1ain2/items/194a9372798eaef6c5ab

        ・ループバックアドレス 【loopback address】 127.0.0.1 / ::1
        　https://e-words.jp/w/%E3%83%AB%E3%83%BC%E3%83%97%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9.html


    ・HTTPリクエストメソッド (GET, POST...)
        ・安全と冪等について
            ・安全＝そのリクエストメソッドがサーバの状態を変更しないこと。
            ・冪等＝サーバが同じ状態のとき、同じリクエストを何回しても同じ効果が起こること。

        ・GET（安全で冪等）
        　データの表現をリクエストする。主にサーバから情報を取り出すときに使われる。
        　パラメータを付け加えて、パラメータに対応した情報を取り出すこともできる。

        ・POST（安全でも冪等でもない）
        　サーバにデータを送信する。主にフォームに入力した内容を受け取るために使われる。
        　同じPOSTリクエストに複数回成功すると、追加の効果が出る。（今回だと複数個の同じ商品が登録される）

        ・PUT（安全でないが冪等）
        　サーバにデータを送信する。
        　新しいリソースが作成されるか、存在する場合は指定したリソースが上書きされる。
        　従って、何回同じPUTリクエストを送っても同じ結果が出る（冪等）。

        cf.
        ・HTTP リクエストメソッド
        　https://developer.mozilla.org/ja/docs/Web/HTTP/Methods

        ・Udemy：REST WebAPI サービス 設計
        　https://mercari.udemy.com/course/rest-webapi-development/learn/lecture/20591810

        ・用語集：サイバーセキュリティに関する用語と定義
        　https://www.f5.com/ja_jp/glossary


    ・HTTPステータスコード (1XX, 2XX, 3XX, 4XX, 5XXはそれぞれどんな意味を持ちますか？)
        ・1XX
        情報レスポンス。リクエストが受け取られたが、処理がまだ未完了であることを表す。

        ・2XX
        成功レスポンス。リクエストが受理されたことを表す。
            基本的には何もなければ最後に200 OKを返すっぽい。

        ・3XX
        リダイレクトメッセージ。リクエストが受け取られたが、それを完了させるためにクライアントが追加ですべきことがあることを表す。

        ・4XX
        クライアントエラーレスポンス。リクエストに間違った点があることを表す。
            e.GET("/", root)
	        e.POST("/items", addItem)
            ↑もしルーティングがこうだったら、「/items/1」にアクセスしようとすると404が出て、「/items」にGETしようとすると405が出るはず。

        ・5XX
        サーバーエラーレスポンス。サーバがリクエストの処理に失敗したことを表す。

        cf.
        HTTP レスポンスステータスコード
        https://developer.mozilla.org/ja/docs/Web/HTTP/Status
